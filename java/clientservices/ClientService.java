
package clientservices;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ClientService", targetNamespace = "http://client/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ClientService {


    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "register", targetNamespace = "http://client/", className = "clientservices.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://client/", className = "clientservices.RegisterResponse")
    @Action(input = "http://client/ClientService/registerRequest", output = "http://client/ClientService/registerResponse")
    public void register(
        @WebParam(name = "arg0", targetNamespace = "")
        User arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<clientservices.Package>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllPackagesForMe", targetNamespace = "http://client/", className = "clientservices.GetAllPackagesForMe")
    @ResponseWrapper(localName = "getAllPackagesForMeResponse", targetNamespace = "http://client/", className = "clientservices.GetAllPackagesForMeResponse")
    @Action(input = "http://client/ClientService/getAllPackagesForMeRequest", output = "http://client/ClientService/getAllPackagesForMeResponse")
    public List<Package> getAllPackagesForMe(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns clientservices.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserByUsername", targetNamespace = "http://client/", className = "clientservices.GetUserByUsername")
    @ResponseWrapper(localName = "getUserByUsernameResponse", targetNamespace = "http://client/", className = "clientservices.GetUserByUsernameResponse")
    @Action(input = "http://client/ClientService/getUserByUsernameRequest", output = "http://client/ClientService/getUserByUsernameResponse")
    public User getUserByUsername(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<clientservices.Package>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchPackages", targetNamespace = "http://client/", className = "clientservices.SearchPackages")
    @ResponseWrapper(localName = "searchPackagesResponse", targetNamespace = "http://client/", className = "clientservices.SearchPackagesResponse")
    @Action(input = "http://client/ClientService/searchPackagesRequest", output = "http://client/ClientService/searchPackagesResponse")
    public List<Package> searchPackages(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPackageStatus", targetNamespace = "http://client/", className = "clientservices.GetPackageStatus")
    @ResponseWrapper(localName = "getPackageStatusResponse", targetNamespace = "http://client/", className = "clientservices.GetPackageStatusResponse")
    @Action(input = "http://client/ClientService/getPackageStatusRequest", output = "http://client/ClientService/getPackageStatusResponse")
    public boolean getPackageStatus(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
